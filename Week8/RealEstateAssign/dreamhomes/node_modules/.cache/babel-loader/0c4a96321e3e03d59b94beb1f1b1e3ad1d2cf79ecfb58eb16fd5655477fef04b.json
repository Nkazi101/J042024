{"ast":null,"code":"var _jsxFileName = \"/Users/nkazi/J042024/Week8/RealEstateAssign/dreamhomes/src/pages/SignIn.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignIn(props) {\n  //this function is designed to handle any changes that occur within the form's input fields. \n  //it's triggerd whenever the user types in an input\n  const signInChangeHandler = event => {\n    //get the name attribute of the input field\n    const name = event.target.name;\n    let value;\n    value = event.target.value;\n\n    //create a copy of the user object from props\n    //we create a tempuser object because we never want to directly modify the original prop user object\n    const tempUser = {\n      ...props.user\n    };\n\n    //update the corresponding property in the temporary user object with the new value\n    tempUser[name] = value;\n    console.log(\"Updated user object\", tempUser);\n\n    //update the state with the modified user object\n    props.setUser(tempUser);\n    console.log(\"User state updated with new value\");\n  };\n\n  //this function is called when the user click the submit button\n  const signInSubmitHandler = () => {\n    //make a post request to the server with the user data\n    axios.post(\"http://localhost:8080/signin\", props.user)\n    //defines what happens if the server responds successfully to the post request\n    .then(response => {\n      //stores the user's id(which might be part of the data returned by the server in response.data) in the browsers local storage. this is helpful to keep track of the logged-in user\n      localStorage.setItem(\"userID\", response.data.id); //store the user id in local storage\n      //update the user state in the parent component with the data received from the server's response\n      props.setUser(response.data);\n      navigator(\"/\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      value: true,\n      onChange: signInChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      onChange: signInChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: signInSubmitHandler,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","SignIn","props","signInChangeHandler","event","name","target","value","tempUser","user","console","log","setUser","signInSubmitHandler","post","then","response","localStorage","setItem","data","id","navigator","catch","e","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/nkazi/J042024/Week8/RealEstateAssign/dreamhomes/src/pages/SignIn.js"],"sourcesContent":["import React from 'react'\nimport axios from 'axios';\n\nfunction SignIn(props) {\n\n\n\n\n  //this function is designed to handle any changes that occur within the form's input fields. \n  //it's triggerd whenever the user types in an input\n  const signInChangeHandler = (event) => {\n\n    //get the name attribute of the input field\n    const name = event.target.name;\n\n    let value;\n\n    value = event.target.value;\n\n    //create a copy of the user object from props\n    //we create a tempuser object because we never want to directly modify the original prop user object\n    const tempUser = {...props.user};\n\n    //update the corresponding property in the temporary user object with the new value\n    tempUser[name] = value;\n    console.log(\"Updated user object\", tempUser);\n\n    //update the state with the modified user object\n    props.setUser(tempUser);\n    console.log(\"User state updated with new value\");\n  \n\n  };\n\n\n\n  //this function is called when the user click the submit button\n    const signInSubmitHandler = () => {\n\n        //make a post request to the server with the user data\n      axios.post(\"http://localhost:8080/signin\", props.user)\n      //defines what happens if the server responds successfully to the post request\n        .then((response) => {\n\n          //stores the user's id(which might be part of the data returned by the server in response.data) in the browsers local storage. this is helpful to keep track of the logged-in user\n          localStorage.setItem(\"userID\", response.data.id); //store the user id in local storage\n          //update the user state in the parent component with the data received from the server's response\n          props.setUser(response.data);\n          navigator(\"/\");\n\n        })\n        .catch((e) => {\n          console.log(e);\n        })\n\n\n    };\n\n\n\n\n    \n  return (\n   \n    <div>\n      <h1>Sign in</h1>\n\n      <label>Email</label>\n      <input name='email' type='email' value onChange={signInChangeHandler}/>\n      <label>Password</label>\n      <input name='password' type='password' onChange={signInChangeHandler}/>\n\n    <button onClick={signInSubmitHandler}>Sign Up</button>\n\n    </div>\n\n\n  )\n}\n\nexport default SignIn"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,MAAMA,CAACC,KAAK,EAAE;EAKrB;EACA;EACA,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;IAErC;IACA,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACD,IAAI;IAE9B,IAAIE,KAAK;IAETA,KAAK,GAAGH,KAAK,CAACE,MAAM,CAACC,KAAK;;IAE1B;IACA;IACA,MAAMC,QAAQ,GAAG;MAAC,GAAGN,KAAK,CAACO;IAAI,CAAC;;IAEhC;IACAD,QAAQ,CAACH,IAAI,CAAC,GAAGE,KAAK;IACtBG,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,QAAQ,CAAC;;IAE5C;IACAN,KAAK,CAACU,OAAO,CAACJ,QAAQ,CAAC;IACvBE,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EAGlD,CAAC;;EAID;EACE,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAE9B;IACFf,KAAK,CAACgB,IAAI,CAAC,8BAA8B,EAAEZ,KAAK,CAACO,IAAI;IACrD;IAAA,CACGM,IAAI,CAAEC,QAAQ,IAAK;MAElB;MACAC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,QAAQ,CAACG,IAAI,CAACC,EAAE,CAAC,CAAC,CAAC;MAClD;MACAlB,KAAK,CAACU,OAAO,CAACI,QAAQ,CAACG,IAAI,CAAC;MAC5BE,SAAS,CAAC,GAAG,CAAC;IAEhB,CAAC,CAAC,CACDC,KAAK,CAAEC,CAAC,IAAK;MACZb,OAAO,CAACC,GAAG,CAACY,CAAC,CAAC;IAChB,CAAC,CAAC;EAGN,CAAC;EAMH,oBAEEvB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhB5B,OAAA;MAAAwB,QAAA,EAAO;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpB5B,OAAA;MAAOK,IAAI,EAAC,OAAO;MAACwB,IAAI,EAAC,OAAO;MAACtB,KAAK;MAACuB,QAAQ,EAAE3B;IAAoB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvE5B,OAAA;MAAAwB,QAAA,EAAO;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACvB5B,OAAA;MAAOK,IAAI,EAAC,UAAU;MAACwB,IAAI,EAAC,UAAU;MAACC,QAAQ,EAAE3B;IAAoB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEzE5B,OAAA;MAAQ+B,OAAO,EAAElB,mBAAoB;MAAAW,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjD,CAAC;AAIV;AAACI,EAAA,GA3EQ/B,MAAM;AA6Ef,eAAeA,MAAM;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}